name: CI

on:
  push:
    branches:
    - main
    - 'fix/*'
    - 'feature/*'
    - 'support/*'
    paths:
    - '**'
    - '!docs/**'

  pull_request:
    branches:
    - main
    - 'support/*'
    paths:
    - '**'
    - '!docs/**'

  repository_dispatch:
    types: [release]

env:
  DOTNET_ROLL_FORWARD_ON_NO_CANDIDATE_FX: 2
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: 1

  ENABLED_DIAGNOSTICS: ${{ secrets.ENABLED_DIAGNOSTICS }}

permissions:
  contents: read
  packages: write

jobs:
  prepare:
    name: Prepare
    uses: ./.github/workflows/_prepare.yml

  build:
    name: Build & Package
    needs: [ prepare ]
    uses: ./.github/workflows/_build.yml

  unit_test:
    name: Test
    needs: [ prepare ]
    uses: ./.github/workflows/_unit_tests.yml
    secrets: inherit

  artifacts_windows_test:
    name: Artifacts Windows
    needs: [ build ]
    uses: ./.github/workflows/_artifacts_windows.yml

  artifacts_linux_test:
    needs: [ build ]
    name: Artifacts Linux (${{ matrix.arch }})
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
    uses: ./.github/workflows/_artifacts_linux.yml
    with:
      runner: ubuntu-latest
      arch: ${{ matrix.arch }}

  docker_linux_images:
    needs:  [ build ]
    name: Docker Images (${{ matrix.arch }})
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
    uses: ./.github/workflows/_docker.yml
    with:
      runner: ubuntu-latest
      arch: ${{ matrix.arch }}
    secrets: inherit

  publish:
    name: Publish
    needs: [ artifacts_windows_test, artifacts_linux_test, docker_linux_images ]
    uses: ./.github/workflows/_publish.yml
    secrets: inherit

  release:
    name: Release
    needs: [ publish ]
    runs-on: windows-latest
    env:
      GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    -
      name: Restore State
      uses: ./.github/actions/artifacts-restore
    -
      uses: actions/download-artifact@v3
      name: Download native linux packages
      with:
        name: native-Linux
        path: ${{ github.workspace }}/artifacts/packages/native
    -
      uses: actions/download-artifact@v3
      name: Download native windows packages
      with:
        name: native-Windows
        path: ${{ github.workspace }}/artifacts/packages/native
    -
      uses: actions/download-artifact@v3
      name: Download native macos packages
      with:
        name: native-macOS
        path: ${{ github.workspace }}/artifacts/packages/native
    -
      name: '[Release]'
      shell: pwsh
      run: dotnet run/release.dll --target=PublishRelease
